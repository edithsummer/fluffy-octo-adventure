<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /9k=
</value>
  </data>
</root>